<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Mmc.Mspace.Theme.Controls"
                    xmlns:vc="clr-namespace:Mmc.Mspace.Theme.Converter"
                    xmlns:helper="clr-namespace:Mmc.Mspace.Theme.Helper;assembly=Mmc.Mspace.Theme"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:conver="clr-namespace:Mmc.Mspace.Theme.Converter">
    <conver:AddressMarginLevelConverter x:Key="AddressMarginLevelConverter"/>
    <conver:InspectionParameterConverter x:Key="inspectionParameterConverter"/>
    <!--组织结构icon-->
    <PathGeometry x:Key="glyphicon-import">F1M2,5C2,5 5,5 5,5 5,5 5,7 5,7 5,7 4.812,7 4.531,7L4,7C4,7,4,10.516,4,13.152L4,14 4.188,14C6.648,14,10.647,14,13.301,14L14,14 14,12.5C14,11.25 14,10 14,10 14,10 16,10 16,10 16,10 16,12.812 16,14L16,14.219 16,14.312C16,14.5,16,14.75,16,14.785L16,15C16,15.5 16,16 16,16 16,16 8.125,16 4.188,16L4,16 3.688,16 3.216,16C3.233,16,3.203,16,3.144,16L3,16C3.025,16 2.793,16 2.602,16 2.75,16 2.5,16 2.312,16 2.219,16 2,16 2,16L2,15.86 2,15.688C2,15.833,2,15.736,2,15.613L2,15.093 2,15C2,14.998 2,14.805 2,14.594 2,14.75 2,14.5 2,14.312L2,14C2,12.062 2,7 2,7 2,7 2,5 2,5z M12,2C12,2 12,5 12,5 12,5 14.211,7.019 18,3 18,3 15.358,8 12,8 12,8 12,11 12,11 12,11 8,7 8,7 8,7 12,2 12,2z</PathGeometry>
    <!--查看-->
    <PathGeometry x:Key="glyphicon-check">F1M13,9C10.791,9 9,10.791 9,13 9,15.209 10.791,17 13,17 15.209,17 17,15.209 17,13 17,10.791 15.209,9 13,9z M13,7C16.314,7 19,9.686 19,13 19,13.828 18.832,14.618 18.529,15.336L17.812,16.398 18.222,16.807C20.113,18.698 23.895,22.48 23.895,22.48 23.895,22.48 22.48,23.894 22.48,23.894 22.48,23.894 18.698,20.113 16.807,18.222L16.398,17.813 15.336,18.529C14.618,18.832 13.828,19 13,19 9.686,19 7,16.314 7,13 7,9.686 9.686,7 13,7z M13,2C19.075,2 24,6.925 24,13 24,14.519 23.692,15.966 23.136,17.282L23.056,17.399 21.884,16.227 21.498,15.841 21.817,14.814C21.937,14.228 22,13.621 22,13 22,8.029 17.97,4 13,4 8.029,4 4,8.029 4,13 4,17.97 8.029,22 13,22 13.621,22 14.228,21.937 14.814,21.817L15.841,21.498 16.227,21.884 17.399,23.056 17.282,23.136C15.966,23.692 14.519,24 13,24 6.925,24 2,19.075 2,13 2,6.925 6.925,2 13,2z</PathGeometry>

    <PathGeometry x:Key="glyphicon-groupheardfold">F1M17,12C17,12 18,12 18,12 18,12 18,12.188 18,12.469L18,13 18.531,13C18.812,13 19,13 19,13 19,13 19,14 19,14 19,14 18.812,14 18.531,14L18,14 18,14.531C18,14.812 18,15 18,15 18,15 17,15 17,15 17,15 17,14.812 17,14.531L17,14 16.469,14C16.188,14 16,14 16,14 16,14 16,13 16,13 16,13 16.188,13 16.469,13L17,13 17,12.469C17,12.188,17,12,17,12z M15,11C15,11 15,16 15,16 15,16 20,16 20,16 20,16 20,11 20,11 20,11 15,11 15,11z M8,1C8,1 12,1 12,1 12,1 12,5 12,5 12,5 11.75,5 11.375,5L11,5C11,5,11,5.438,11,6.094L11,7 12.546,7C14.983,7,16.933,7,16.933,7L16.968,7.013 17,7C17.552,7 18,7.448 18,8 18,8 18,9 18,10L19.906,10C20.562,10 21,10 21,10 21,10 21,17 21,17 21,17 14,17 14,17 14,17 14,10 14,10 14,10 14.438,10 15.094,10L16,10 16,9 15.653,9C15.059,9,14.294,9,13.434,9L11,9 11,10.906C11,11.562,11,12,11,12L11.375,12C11.75,12 12,12 12,12 12,12 12,16 12,16 12,16 8,16 8,16 8,16 8,12 8,12 8,12 9,12 9,12 9,12 9,11.562 9,10.906L9,9 7.761,9C6.833,9,5.965,9,5.234,9L4,9 4,10C4,11,4,12,4,12L4.375,12C4.75,12 5,12 5,12 5,12 5,16 5,16 5,16 1,16 1,16 1,16 1,12 1,12 1,12 1.25,12 1.625,12L2,12C2,12 2,8 2,8 2,7.448 2.448,7 3,7L3.032,7.013 3.067,7C3.067,7,5.017,7,7.454,7L9,7 9,6.094C9,5.438,9,5,9,5L8.625,5C8.25,5 8,5 8,5 8,5 8,1 8,1z</PathGeometry>
    <PathGeometry x:Key="glyphicon-groupheardunfold">F1M16,13C16,13 19,13 19,13 19,13 19,14 19,14 19,14 16,14 16,14 16,14 16,13 16,13z M15,11C15,11 15,16 15,16 15,16 20,16 20,16 20,16 20,11 20,11 20,11 15,11 15,11z M8,1C8,1 12,1 12,1 12,1 12,5 12,5 12,5 11.75,5 11.375,5L11,5C11,5,11,5.438,11,6.094L11,7 12.546,7C14.983,7,16.933,7,16.933,7L16.968,7.013 17,7C17.552,7 18,7.448 18,8 18,8 18,9 18,10L19.906,10C20.562,10 21,10 21,10 21,10 21,17 21,17 21,17 14,17 14,17 14,17 14,10 14,10 14,10 14.438,10 15.094,10L16,10 16,9 15.653,9C15.059,9,14.294,9,13.434,9L11,9 11,10.906C11,11.562,11,12,11,12L11.375,12C11.75,12 12,12 12,12 12,12 12,16 12,16 12,16 8,16 8,16 8,16 8,12 8,12 8,12 9,12 9,12 9,12 9,11.562 9,10.906L9,9 7.761,9C6.833,9,5.965,9,5.234,9L4,9 4,10C4,11,4,12,4,12L4.375,12C4.75,12 5,12 5,12 5,12 5,16 5,16 5,16 1,16 1,16 1,16 1,12 1,12 1,12 1.25,12 1.625,12L2,12C2,12 2,8 2,8 2,7.448 2.448,7 3,7L3.032,7.013 3.067,7C3.067,7,5.017,7,7.454,7L9,7 9,6.094C9,5.438,9,5,9,5L8.625,5C8.25,5 8,5 8,5 8,5 8,1 8,1z</PathGeometry>
    <PathGeometry x:Key="glyphicon-groupchildfold">M383.289025,433.138269 L385.813923,430.318454 C386.19412,429.893849 386.808284,429.893849 387.188481,430.318454 L389.713379,433.138269 C390.327543,433.82417 389.888854,435 389.021225,435 L383.97143,435 C383.103801,435 382.674861,433.82417 383.289025,433.138269 Z</PathGeometry>
    <PathGeometry x:Key="glyphicon-groupchildunfold">F1M5,8C5,8 13,8 13,8 13,8 13,10 13,10 13,10 5,10 5,10 5,10 5,8 5,8z M2,2C2,2 2,16 2,16 2,16 16,16 16,16 16,16 16,2 16,2 16,2 2,2 2,2z M1,1C1,1 17,1 17,1 17,1 17,17 17,17 17,17 1,17 1,17 1,17 1,1 1,1z</PathGeometry>
    <!--Menu-->
    <SolidColorBrush x:Key="MenuForeground" Color="#EBF5FF"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuBackground" Color="#2A3243"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuBorderBrush" Color="#3E485C"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuMouseOverBackground" Color="#1890FF"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuMouseOverForeground" Color="#ffffff"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuPressedBackground" Color="#1890FF"></SolidColorBrush>
    <SolidColorBrush x:Key="MenuPressedForeground" Color="#ffffff"></SolidColorBrush>
    <SolidColorBrush x:Key="CheckedForeground" Color="#ffffff"></SolidColorBrush>
    <!--边框：Menu-->
    <DropShadowEffect x:Key="DefaultDropShadow" Color="Black" BlurRadius="5" ShadowDepth="2" Direction="315" Opacity="0.6" />
    <!--菜单项MenuItem样式IconMenuItem-->
    <Style x:Key="IconMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!--Item-->
                    <Border  x:Name="border" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding Height}" Opacity="1">
                        <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                            </Grid.ColumnDefinitions>
                            <!--icon-->

                            <!--Header-->
                            <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"/>
                            <!--快捷键 -->
                            <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}" />
                            <!--右指针-->
                            <Image x:Name="PART_Arrow" Grid.Column="3" Height="14" Width="14" Stretch="Uniform" Source="{StaticResource xiala}"/>
                            <!--淡出子集菜单容器-->
                            <Popup x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
    									Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Background="{TemplateBinding Background}"  CornerRadius="0" Margin="5" Effect="{StaticResource DefaultDropShadow}"
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--TopLevelHeader:第一级菜单（有子菜单）-->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--TopLevelItem 第一级菜单（无子级）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--SubmenuHeader:子菜单，有子菜单-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                            <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <!--SubMenuItem:子菜单，无子级-->
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                        </Trigger>
                        <!--选中状态，优先级将高于Icon-->
                        <Trigger Property="IsChecked" Value="True">

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Value="0.68" Property="Opacity"></Setter>
                        </Trigger>
                        <!--高亮状态-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MenuMouseOverBackground}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource MenuMouseOverForeground}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MenuPressedBackground}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource MenuPressedForeground}"></Setter>
                        </Trigger>
                        <!--子菜单打开状态-->
                        <Trigger Property="IsSubmenuOpen" Value="true" >
                            <Setter TargetName="PART_Arrow" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" CenterX="7" CenterY="7"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--基于FIconMenuItem的默认样式，提供Header模板-->
    <Style x:Key="DefaultMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource IconMenuItem}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="txtHeader" FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"
                               HorizontalAlignment="Stretch" Margin="3,1,5,1"
                               Text="{Binding Header,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}" VerticalAlignment="Center"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认右键菜单ContextMenu样式-->
    <Style x:Key="DefaultContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource MenuForeground}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource DefaultDropShadow}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--文本操作右键菜单-->
    <ContextMenu x:Key="TextBoxContextMenu" Style="{StaticResource DefaultContextMenu}">
        <MenuItem Command="ApplicationCommands.Cut" Header="剪切" Style="{DynamicResource DefaultMenuItem}" />
        <MenuItem Command="ApplicationCommands.Copy" Header="复制" Style="{DynamicResource DefaultMenuItem}" />
        <MenuItem Command="ApplicationCommands.Paste" Header="粘贴" Style="{DynamicResource DefaultMenuItem}" />
    </ContextMenu>


    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Path x:Name="ExpandPath" Data="{StaticResource glyphicon-groupchildfold}"   Fill="White" Width="12" Height="12" Stretch="Uniform" VerticalAlignment="Center">
                            <!--<Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="4" CenterX="4"/>
                            </Path.RenderTransform>-->
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="225" CenterY="4" CenterX="4"/>
                                </Setter.Value>
                            </Setter>-->
                            <!--<Setter Property="Data" TargetName="ExpandPath" Value="{StaticResource glyphicon-groupchildunfold}"  />-->
                            <Setter Property="RenderTransform" TargetName="ExpandPath" >
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="4" CenterX="4"/>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="Fill" TargetName="ExpandPath" Value="White"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>-->
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource Path16_D}"/>
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource Path16_P}"/>
                        </Trigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="White"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--组织结构标签页左侧树样式-->
    <Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="15px"/>
        <Setter Property="Foreground" Value="#FFC0D1DE"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}"
                                      CanContentScroll="false" Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                      Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Template="{DynamicResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <!--<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>


    <Style x:Key="DefaultTreeViewStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding Path=IsExpand}"></Setter>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="FontSize" Value="15px"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <controls:IndentConverter Indent="26" MarginLeft="5" x:Key="IndentConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
                            <!--整行点击即可触发事件-->
                            <Grid Margin="{Binding Converter={StaticResource IndentConverter}, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="38">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="21" Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Grid.ColumnSpan="3"></Border>
                                <ToggleButton x:Name="Expander"  Command="{Binding DataContext.ClickNodeCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"
											  Style="{DynamicResource ToggleButtonStyle1}"
											  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
											  ClickMode="Press" Width="Auto" HorizontalAlignment="Left" 
											  Height="Auto" Margin="0,0,5,0">
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header"
												  Grid.Column="1" 
												  ContentSource="Header"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <controls:Buttons Grid.Column="2" x:Name="PART_Import" Tag="PART_Import" Visibility="Collapsed" Command="{Binding Path=DataContext.ImportCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-import}" ToolTip="{DynamicResource RouteInput}" PressInnerPathFill="{StaticResource Path16_P}" OverInnerPathFill="{StaticResource Path16_F}" HasPathData="True" Margin="1,0,2,0"/>
                                <controls:Buttons Grid.Column="2" x:Name="PART_Check" Tag="PART_Check" Visibility="Collapsed" Command="{Binding Path=DataContext.CheckedCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-check}" ToolTip="{DynamicResource AccountscrCheck}" PressInnerPathFill="{StaticResource Path16_P}" OverInnerPathFill="{StaticResource Path16_F}" HasPathData="True" Margin="1,0,2,0"/>
                                <controls:Buttons Grid.Column="2" x:Name="PART_Download" Tag="PART_Download" Visibility="Collapsed" Command="{Binding Path=DataContext.DownloadCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-download}" ToolTip="{DynamicResource Download}" PressInnerPathFill="{StaticResource Path16_P}" OverInnerPathFill="{StaticResource Path16_F}" HasPathData="True" Margin="1,0,2,0"/>

                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </MultiTrigger>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonMouseOver}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonMouseOver}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </MultiTrigger>
                     
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter TargetName="PART_Import" Property="Visibility" >
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource inspectionParameterConverter}">
                                        <Binding  Path="DataType" />
                                        <Binding  Path="IsChecked"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Check" Property="Visibility">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource inspectionParameterConverter}">
                                        <Binding  Path="DataType" />
                                        <Binding  Path="IsChecked"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Download" Property="Visibility">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource inspectionParameterConverter}">
                                        <Binding  Path="DataType" />
                                        <Binding  Path="IsChecked"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--<EventTrigger RoutedEvent="StackPanel.Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetName="Loading" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:1" RepeatBehavior="Forever"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    <!-- 可视化树折叠展开的按钮样式 -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="24" Height="24" SnapsToDevicePixels="True">
                        <Border >
                            <Image x:Name="img" Visibility="Visible"  Stretch="Uniform" Height="24" Width="24"
                                    HorizontalAlignment="Left" VerticalAlignment="Center"
                                    Source="{DynamicResource Address_Fold}"/>
                        </Border>
                         <!--Rectangle 9x9 pixels 
                        <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Silver" Offset="0.5"/>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                         画一个垂直方向的直线 
                        <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                         画一个水平方向的直线 
                        <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="img" Property="Source" Value="{DynamicResource Address_Fold_C}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="false"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="img" Property="Source" Value="{DynamicResource Address_Fold_H}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <!-- 通过IsChecked判断折叠还是展开 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="false"/>
                                <Condition Property="IsPressed" Value="false"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="img" Property="Source" Value="{DynamicResource Address_UnFold}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="img" Property="Source" Value="{DynamicResource Address_UnFold_C}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="img" Property="Source" Value="{DynamicResource Address_UnFold_H}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <vc:TreeViewUIConverter x:Key="LineConverter"/>
    <!-- （通用）可视化树孩子样式 -->
    <Style x:Key="AddressTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"></Setter>
        <!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Foreground" Value="#FF565656"/>
        <Setter Property="FontFamily" Value="FZLTZHUNHK"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition MinWidth="20" Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20"/>
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <!-- Connecting Lines -->
                        <!-- Horizontal line -->
                        <Rectangle x:Name="HorLn" Margin="9,0,0,0" Height="1" Stroke="#FF565656" SnapsToDevicePixels="True" StrokeDashCap="Square" StrokeDashArray="3,5" StrokeDashOffset="1"/>
                        <!-- Vertical line -->
                        <Rectangle x:Name="VerLn" Width="1" Stroke="#FF565656" Margin="0,0,3,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White" StrokeDashCap="Square" StrokeDashArray="3,5"/>
                        <ToggleButton x:Name="Expander"
                                      Grid.Column="0"
                                      Grid.Row="0"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                HorizontalAlignment="Left"
                                Grid.Column="1"
                                Margin="-343,0,0,0"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#FF025BC7"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        </Trigger>
                        <!--被选中后失去焦点-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF025BC7"/>
                            <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <!-- 当前层最后一个元素不画下方垂直线 -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="15"/>
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <!-- Root第一个元素不显示上方垂直线 -->
                        <Trigger Property="TabIndex" Value="1">
                            <Setter TargetName="VerLn" Property="Margin" Value="0,12,1,0"/>
                            <Setter TargetName="VerLn" Property="Height" Value="Auto"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="#FFF0F0F0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="-5,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="24"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="2" Margin="-1600,0,0,0"  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="Transparent"  SnapsToDevicePixels="true"/>
                        
                        <ToggleButton  x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <StackPanel Width="375" Orientation="Horizontal" Grid.Column="1" >
                            <TextBlock Width="80"  VerticalAlignment="Center" Foreground="#B3BBC5" FontSize="14" ToolTip="{Binding NodeName}" Text="{Binding NodeName}" ></TextBlock>
                            <Border  Opacity="0.7" >
								<!--TextTrimming="WordEllipsis"-->
								<StackPanel Orientation="Horizontal" x:Name="buttonvisibility" Visibility="Collapsed" Background ="#50ABFF"  Margin="{Binding AddressLevel, Converter={StaticResource AddressMarginLevelConverter}}">
                                    <controls:Buttons AllowDrop="False" IsEnabled="{Binding AddressBtnEnable}" Visibility ="{Binding AddBtnVisibility}" 
                                      ToolTip="{DynamicResource AMV_AddAddress}"
                                      RIcon="{DynamicResource Address_Add}"
                                      MouseOverRIcon="{DynamicResource Address_Add_H}"
                                      PressedRIcon="{DynamicResource Address_Add_C}"
                                      Style="{StaticResource AddressBtnStyle}" 
                                      Command="{Binding Path=DataContext.AddChildNodeCmd,RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  AllowDrop="False" IsEnabled="{Binding AddressBtnEnable}" 
                                      ToolTip="{DynamicResource AMV_RemoveAddress}"
                                      RIcon="{DynamicResource Address_Delete}"
                                      MouseOverRIcon="{DynamicResource Address_Delete_H}"
                                      PressedRIcon="{DynamicResource Address_Delete_C}"
                                      Style="{StaticResource AddressBtnStyle}" 
                                      Command="{Binding Path=DataContext.DeleteChildNodeCmd,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  AllowDrop="False" IsEnabled="{Binding AddressBtnEnable}" 
                                      ToolTip="{DynamicResource AMV_SetAddress}"
                                      RIcon="{DynamicResource Address_Set}"
                                      MouseOverRIcon="{DynamicResource Address_Set_H}"
                                      PressedRIcon="{DynamicResource Address_Set_C}"
                                      Style="{StaticResource AddressBtnStyle}" 
                                      Command="{Binding Path=DataContext.SetNodeInfoCmd,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <ItemsPresenter  x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#50ABFF" />
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </Trigger>-->


                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition  Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#50ABFF" />
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF404040"/>

                            <Setter Property="Background" TargetName="Expander" Value="#FF404040"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle2" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="#FFF0F0F0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="-5,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="24"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="2" Margin="-1600,0,0,0"  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="Transparent"  SnapsToDevicePixels="true"/>

                        <ToggleButton  x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <StackPanel Width="375" Orientation="Horizontal" Grid.Column="1" >
                            <TextBlock Width="80"  VerticalAlignment="Center" Foreground="#B3BBC5" FontSize="14" ToolTip="{Binding NodeName}" Text="{Binding NodeName}" ></TextBlock>
                        </StackPanel>
                        <ItemsPresenter  x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#50ABFF" />
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </Trigger>-->


                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition  Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#50ABFF" />
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF404040"/>

                            <Setter Property="Background" TargetName="Expander" Value="#FF404040"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemStyle3" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Foreground" Value="#FFF0F0F0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Margin="-5,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                <i:InvokeCommandAction  Command="{Binding Path=DataContext.SelectCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border Grid.ColumnSpan="2" Margin="0,0,0,0"  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="Transparent"  SnapsToDevicePixels="true"/>

                        <ToggleButton  x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <DockPanel   Grid.Column="1" HorizontalAlignment="Stretch" Margin="10 0 10 0">
                            <TextBlock   HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#B3BBC5" FontSize="14" ToolTip="{Binding NodeName}" Text="{Binding NodeName}" ></TextBlock>
                            <Border    HorizontalAlignment="Right">
                                <!--TextTrimming="W ordEllipsis"-->
                                <StackPanel Orientation="Horizontal" x:Name="buttonvisibility"  HorizontalAlignment="Right" Visibility="Visible" Background ="Transparent" >
                                    <!--<controls:Buttons   Visibility ="{Binding AddBtnVisibility}" 
                                      ToolTip="{DynamicResource AMV_AddAddress}"
                                      RIcon="{DynamicResource Address_Add}"
                                      MouseOverRIcon="{DynamicResource Address_Add_H}"
                                      PressedRIcon="{DynamicResource Address_Add_C}"
                                      Style="{StaticResource AddressBtnStyle}" 
                                      Command="{Binding Path=DataContext.AddChildNodeCmd,RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons 
                                      ToolTip="{DynamicResource AMV_RemoveAddress}"
                                      RIcon="{DynamicResource Address_Delete}"
                                      MouseOverRIcon="{DynamicResource Address_Delete_H}"
                                      PressedRIcon="{DynamicResource Address_Delete_C}"
                                      Style="{StaticResource AddressBtnStyle}" 
                                      Command="{Binding Path=DataContext.DeleteChildNodeCmd,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  
                                      ToolTip="{DynamicResource AMV_SetAddress}"
                                      RIcon="{DynamicResource Address_Set}"
                                      MouseOverRIcon="{DynamicResource Address_Set_H}"
                                      PressedRIcon="{DynamicResource Address_Set_C}"
                                      Style="{StaticResource AddressBtnStyle}" 
                                      Command="{Binding Path=DataContext.SetNodeInfoCmd,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>-->
                                    <controls:Buttons  
                                      ToolTip="视频" x:Name="video_btn"
                                      RIcon="{DynamicResource Video_S}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource Video_C}"
                                      PressedRIcon="{DynamicResource Video_C}" Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 7 0" 
                                      Command="{Binding Path=DataContext.CheckVideoCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  
                                      ToolTip="正射" x:Name="yingxiang_btn"
                                      RIcon="{DynamicResource zhengshe}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource zhengshe_C}"
                                      PressedRIcon="{DynamicResource zhengshe_C}"  Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 7 0" 
                                      Command="{Binding Path=DataContext.SelectCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  
                                      ToolTip="倾斜" x:Name="zhengshe_btn"
                                      RIcon="{DynamicResource qingxie}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource qingxie_C}"
                                      PressedRIcon="{DynamicResource qingxie_C}"  Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 7 0" 
                                      Command="{Binding Path=DataContext.SelectCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  
                                      ToolTip="图片" x:Name="pic_btn"
                                      RIcon="{DynamicResource Pic_C}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource Pic_S}"
                                      PressedRIcon="{DynamicResource Pic_S}"  Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 7 0" 
                                      Command="{Binding Path=DataContext.PicCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    
                                    <controls:Buttons  
                                      ToolTip="报告" x:Name="check_btn"
                                      RIcon="{DynamicResource pdf}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource pdf_C}"
                                      PressedRIcon="{DynamicResource pdf_C}"  Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 7 0" 
                                      Command="{Binding Path=DataContext.CheckReportCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  
                                      ToolTip="编辑" x:Name="edit_btn"
                                      RIcon="{DynamicResource bianji}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource bianji_C}"
                                      PressedRIcon="{DynamicResource bianji_C}"  Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 5 0" 
                                      Command="{Binding Path=DataContext.EditCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  
                                      ToolTip="删除" x:Name="delete_btn"
                                      RIcon="{DynamicResource DeletePointNew}" Visibility="Collapsed"
                                      MouseOverRIcon="{DynamicResource DeletePointNew_H}"
                                      PressedRIcon="{DynamicResource DeletePointNew_H}"  Height="18" Width="16"
                                      Style="{StaticResource HomeLeftButtonStyle}" Margin="0 0 5 0" 
                                      Command="{Binding Path=DataContext.DeleteCommand,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      CommandParameter="{Binding}"/>
                                    <controls:Buttons  Command="{Binding Path=DataContext.AddCommand,RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="Collapsed" CommandParameter="{Binding .}"   Style="{DynamicResource Button_plusStyle}" Height="24" Width="24" HasPathData="true" PathData="{DynamicResource glyphicon-add}" RIcon="{DynamicResource add_n}" x:Name="add_btn" ToolTip="添加" InnerPathFill="#50ABFF"  HorizontalAlignment="Right" Margin="0 0 10 0"/>

                                    <ToggleButton x:Name="FirstEye" Margin="2,0" Tag="0" Visibility="Collapsed" IsChecked="{Binding FirstEyeStatus}"
                                    Command="{Binding DataContext.CheckMapCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"   CommandParameter="{Binding .}" Style="{DynamicResource MapTogButtonStyle}"></ToggleButton>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                        <ItemsPresenter  x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#50ABFF" />
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Level}" Value="4">
                            <Setter Property="Visibility" TargetName="delete_btn" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="edit_btn" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="FirstEye" Value="Visible"/>
                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="3">
                            <Setter Property="Visibility" TargetName="add_btn" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level}" Value="4">
                            <Setter Property="Visibility" TargetName="yingxiang_btn" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="Video">
                            <Setter Property="Visibility" TargetName="video_btn" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="yingxiang_btn" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="ImageGroupLayer">
                            <Setter Property="Visibility" TargetName="video_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="yingxiang_btn" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="report">
                            <Setter Property="Visibility" TargetName="check_btn" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="video_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="yingxiang_btn" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="Img">
                            <Setter Property="Visibility" TargetName="check_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="video_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="yingxiang_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="pic_btn" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="TileGroupLayer">
                            <Setter Property="Visibility" TargetName="zhengshe_btn" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="check_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="video_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="yingxiang_btn" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="pic_btn" Value="Collapsed"/>
                        </DataTrigger>
                        
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </Trigger>-->


                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition  Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#50ABFF" />
                            <Setter Property="Background" TargetName="Expander" Value="#50ABFF"/>
                            <Setter Property="Visibility" TargetName="buttonvisibility" Value="Visible"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF404040"/>

                            <Setter Property="Background" TargetName="Expander" Value="#FF404040"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#50ABFF"/>
    <Style x:Key="AddressTreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <!--<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <!--<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">-->
                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" 
                                      CanContentScroll="false" Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>-->
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



























    <Style x:Key="DefaultTreeViewStyle1111111" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding Path=IsExpand}"></Setter>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="FontSize" Value="15px"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <controls:IndentConverter Indent="26" MarginLeft="5" x:Key="IndentConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								SnapsToDevicePixels="True">
                            <!--整行点击即可触发事件-->
                            <Grid Margin="{Binding Converter={StaticResource IndentConverter}, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="38">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="21" Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Grid.ColumnSpan="3"></Border>
                                <ToggleButton x:Name="Expander"  Command="{Binding DataContext.ClickNodeCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"
											  Style="{DynamicResource ToggleButtonStyle1}"
											  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
											  ClickMode="Press" Width="Auto" HorizontalAlignment="Left" 
											  Height="Auto" Margin="0,0,5,0">
                                </ToggleButton>
                                <ContentPresenter x:Name="PART_Header"
												  Grid.Column="1" 
												  ContentSource="Header"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <controls:Buttons Grid.Column="2" x:Name="PART_Import" Tag="PART_Import" Visibility="Collapsed" Command="{Binding Path=DataContext.ImportCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-import}" ToolTip="{DynamicResource RouteInput}" PressInnerPathFill="{StaticResource Path16_P}" OverInnerPathFill="{StaticResource Path16_F}" HasPathData="True" Margin="1,0,2,0"/>
                                <controls:Buttons Grid.Column="2" x:Name="PART_Check" Tag="PART_Check" Visibility="Collapsed" Command="{Binding Path=DataContext.CheckedCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-check}" ToolTip="{DynamicResource AccountscrCheck}" PressInnerPathFill="{StaticResource Path16_P}" OverInnerPathFill="{StaticResource Path16_F}" HasPathData="True" Margin="1,0,2,0"/>
                                <controls:Buttons Grid.Column="2" x:Name="PART_Download" Tag="PART_Download" Visibility="Collapsed" Command="{Binding Path=DataContext.DownloadCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-download}" ToolTip="{DynamicResource Download}" PressInnerPathFill="{StaticResource Path16_P}" OverInnerPathFill="{StaticResource Path16_F}" HasPathData="True" Margin="1,0,2,0"/>

                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </MultiTrigger>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonMouseOver}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonMouseOver}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter TargetName="Border" Property="Background"
									Value="{StaticResource DefaultButtonPressed}" />
                            <Setter Property="Foreground" Value="{StaticResource DefaultForeground}"/>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter TargetName="PART_Import" Property="Visibility" >
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource inspectionParameterConverter}">
                                        <Binding  Path="DataType" />
                                        <Binding  Path="IsChecked"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Check" Property="Visibility">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource inspectionParameterConverter}">
                                        <Binding  Path="DataType" />
                                        <Binding  Path="IsChecked"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Download" Property="Visibility">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource inspectionParameterConverter}">
                                        <Binding  Path="DataType" />
                                        <Binding  Path="IsChecked"/>
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>














</ResourceDictionary>