<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                      xmlns:controls="clr-namespace:Mmc.Mspace.Theme.Controls"
                    xmlns:helper="clr-namespace:Mmc.Mspace.Theme.Helper"
                    xmlns:convert="clr-namespace:Mmc.Mspace.Theme.Converter">
    <convert:MapParameterConverter x:Key="ParameterConverter"/>
    <convert:BoolToVisibleConverter x:Key="BoolToVisible"/>
    <Style x:Key="MapTogButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource MapToggleButtonStyle}">
        <Setter Property="CommandParameter">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ParameterConverter}">
                    <Binding Path="."/>
                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True"></WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="MenuBackground_P" Opacity="1" Color="#226fbe"/>

    <SolidColorBrush x:Key="MenuBackground_F" Opacity="1" Color="#FF047BD8"/>

    <PathGeometry x:Key="glyphicon-xiala">F1M15.349,1.596C15.349,1.596 15.504,1.596 15.504,1.596 15.504,1.596 8.749,9.095 8.749,9.095 8.749,9.095 1.994,1.596 1.994,1.596 1.994,1.596 1.999,1.596 1.999,1.596 1.999,1.596 8.749,4.926 8.749,4.926 8.749,4.926 15.349,1.596 15.349,1.596z</PathGeometry>
    <Style x:Key="MenuListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="FontSize" Value="15px" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="Background" Value="{DynamicResource LeftWindowBg}"/>
        <Setter Property="BorderBrush" Value="#2D2F35"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Width="{TemplateBinding Width}" Height="40" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid x:Name="ListBoxGrid" Background="Transparent" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding DataContext.MouseDownCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="GridImageBrush" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" VerticalAlignment="Stretch"/>

                                <Image x:Name="GridImage" Grid.Column="0" Source="{Binding DataPath}" Visibility="Hidden" Stretch="Uniform" Width="20" Height="20" VerticalAlignment="Center" Margin="10,0,10,0" HorizontalAlignment="Left"/>
                                <TextBlock x:Name="GridLable" Grid.Column="1" Margin="5,0,0,0" MaxWidth="160" TextTrimming="CharacterEllipsis" ToolTip="{Binding Name}" Text="{Binding Name}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" VerticalAlignment="Center" />

                                <Image HorizontalAlignment="Left" Grid.Column="2" Margin="5,0"  Visibility="Collapsed" VerticalAlignment="Center" Name="Arrow" Width="12.2" Height="6.6" Source="{DynamicResource up_N}"  Stretch="Uniform" ></Image>

                                <controls:Buttons  x:Name="alphaStation" Grid.Column="3" Margin="2,0"  Visibility="Collapsed" HasPathData="True" Height="20" Width="20"
                                                   RIcon="{DynamicResource clip_n}" HorizontalAlignment="Right"
                                                   MouseOverRIcon="{DynamicResource clip_n}"
                                                   PressedRIcon="{DynamicResource clip_n}" Command="{Binding DataContext.ChangeImageAlphaCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}" Style="{StaticResource HomeLeftButtonStyle}"/>
                                <controls:Buttons  x:Name="add" Grid.Column="4" Margin="2,0"  Visibility="Collapsed" HasPathData="True" Height="20" Width="20"
                                    RIcon="{DynamicResource add_n}" HorizontalAlignment="Right"
                                    MouseOverRIcon="{DynamicResource add_n}"
                                    PressedRIcon="{DynamicResource add_n}" Command="{Binding DataContext.AddCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}" Style="{StaticResource HomeLeftButtonStyle}"></controls:Buttons>
                                <controls:Buttons x:Name="delete" Grid.Column="4" Margin="2,0"  HasPathData="True" Height="20" Width="20"
                                    RIcon="{DynamicResource delete_n}" HorizontalAlignment="Right"
                                    MouseOverRIcon="{DynamicResource delete_n}" Visibility="Collapsed"
                                    PressedRIcon="{DynamicResource delete_n}" Command="{Binding DataContext.DeleteCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}" Style="{StaticResource HomeLeftButtonStyle}"></controls:Buttons>
                                <controls:Buttons x:Name="symbolic" Grid.Column="5" Margin="2,0"  HasPathData="True" Height="20" Width="20"
                                    RIcon="{DynamicResource symbolic}" HorizontalAlignment="Right"
                                    MouseOverRIcon="{DynamicResource symbolic}" Visibility="Collapsed"
                                    PressedRIcon="{DynamicResource symbolic}" Command="{Binding DataContext.SymbolicCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}" Style="{StaticResource HomeLeftButtonStyle}"></controls:Buttons>

                                <UniformGrid x:Name="_UniformGrid" Grid.Column="6" VerticalAlignment="Center">

                                    <ToggleButton x:Name="FirstEye" Margin="2,0" Tag="0" Visibility="Collapsed" IsChecked="{Binding FirstEyeStatus}"
                                    Command="{Binding DataContext.CheckMapCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  Style="{DynamicResource MapTogButtonStyle}"></ToggleButton>

                                    <ToggleButton x:Name="TwoEye" Margin="2,0" Tag="1" Visibility="Collapsed" IsChecked="{Binding TwoEyeStatus}"
                                    Command="{Binding DataContext.CheckMapCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  Style="{DynamicResource MapTogButtonStyle}"></ToggleButton>

                                    <ToggleButton x:Name="ThreeEye" Margin="2,0" Tag="2" Visibility="Collapsed" IsChecked="{Binding ThreeEyeStatus}"
                                    Command="{Binding DataContext.CheckMapCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  Style="{DynamicResource MapTogButtonStyle}"></ToggleButton>

                                    <ToggleButton x:Name="FourEye" Margin="2,0" Tag="3" Visibility="Collapsed" IsChecked="{Binding FourEyeStatus}"
                                    Command="{Binding DataContext.CheckMapCommand,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"  Style="{DynamicResource MapTogButtonStyle}"></ToggleButton>
                                </UniformGrid>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <!--MenuLevel ==1 HasPathData=true 显示展开按钮-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasPathData}" Value="true"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="1"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="GridImage" Property="Margin" Value="10,0,10,0"></Setter>
                            <Setter TargetName="Arrow" Property="LayoutTransform" >
                                <Setter.Value>
                                    <RotateTransform Angle="270" CenterX="10" CenterY="10"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--MenuLevel ==1  显示添加按钮，GridImage 图标-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MenuLevel}" Value="1"></Condition>
                            </MultiDataTrigger.Conditions>
                            <!--<Setter TargetName="add" Property="Visibility" Value="Visible"/>-->
                            <Setter TargetName="GridImage" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--MenuLevel ==2  显示删除按钮-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MenuLevel}" Value="2"></Condition>
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="delete" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#2D2F35"/>
                            <Setter TargetName="GridImage" Property="Margin" Value="20,0,0,0"/>
                            <!--<Setter TargetName="alphaStation" Property="Visibility" Value="Visible"/>-->
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--AlphaStation ==1  显示alphaStation按钮-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AlphaBtnOn}" Value="true"></Condition>
                            </MultiDataTrigger.Conditions>
                            <!--<Setter TargetName="add" Property="Visibility" Value="Visible"/>-->
                            <Setter TargetName="alphaStation" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="Bd" Property="Background" Value="#50ABFF"/>-->
                            <!--<Setter TargetName="GridImage" Property="Fill" Value="#C0D1DE"></Setter>-->
                            <Setter TargetName="GridLable" Property="Foreground" Value="{StaticResource MenuBackground_P}"></Setter>
                        </Trigger>

                        <!--IsSymbolic ==true  显示单点化按钮-->
                        <DataTrigger Binding="{Binding IsSymbolic}" Value="true">
                            <Setter  Property="Visibility" TargetName="symbolic" Value="Visible"></Setter>
                        </DataTrigger>
                        <!--IsDisplay ==true  隐藏Item-->
                        <DataTrigger Binding="{Binding IsDisplay}" Value="true">
                            <Setter  Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                        <!--IsDisplay ==false  显示Item-->
                        <DataTrigger Binding="{Binding IsDisplay}" Value="false">
                            <Setter  Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding AlphaStation}" Value="1">
                            <Setter TargetName="alphaStation"  Property="RIcon" Value="{DynamicResource clip_n}"></Setter>
                            <Setter TargetName="alphaStation"  Property="MouseOverRIcon" Value="{DynamicResource clip_n}"></Setter>
                            <Setter TargetName="alphaStation"  Property="PressedRIcon" Value="{DynamicResource clip_n}"></Setter>
                        </DataTrigger>
                        <!--IsDisplay ==false  显示Item-->
                        <DataTrigger Binding="{Binding AlphaStation}" Value="0">
                            <Setter TargetName="alphaStation"  Property="RIcon" Value="{DynamicResource clip}"></Setter>
                            <Setter TargetName="alphaStation"  Property="MouseOverRIcon" Value="{DynamicResource clip}"></Setter>
                            <Setter TargetName="alphaStation"  Property="PressedRIcon" Value="{DynamicResource clip}"></Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <!--MenuLevel ==2  HasPathData=true 显示展开图标-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasPathData}" Value="true"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="2"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="Arrow" Property="LayoutTransform" >
                                <Setter.Value>
                                    <RotateTransform Angle="270" CenterX="10" CenterY="10"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--MenuLevel ==3   隐藏展开图标-->
                        <DataTrigger Binding="{Binding MenuLevel}" Value="3">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#2D2F35"/>
                            <Setter TargetName="GridImage" Property="Margin" Value="40,0,0,0"></Setter>
                            <Setter TargetName="Arrow" Property="Visibility" Value="Hidden"></Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <!--MenuLevel ==1  IsChecked=true   展开图标变化-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked}" Value="true"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="1"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="LayoutTransform" >
                                <Setter.Value>
                                    <RotateTransform Angle="0" CenterX="10" CenterY="10"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--MenuLevel ==2  IsChecked=true  展开图标变化-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked}" Value="true"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="2"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Arrow" Property="LayoutTransform" >
                                <Setter.Value>
                                    <RotateTransform Angle="0" CenterX="10" CenterY="10"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="false"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="1"></Condition>
                            </MultiDataTrigger.Conditions>

                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasPathData}" Value="false"></Condition>
                                <Condition Binding="{Binding IsSelected}" Value="false"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="2"></Condition>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="false"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="3"></Condition>
                            </MultiDataTrigger.Conditions>

                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <!--MenuLevel ==3  IsSelected=true  字体颜色变化-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="true"></Condition>
                                <Condition Binding="{Binding MenuLevel}" Value="3"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="GridLable" Property="Foreground" Value="{StaticResource MenuBackground_P}"></Setter>
                        </MultiDataTrigger>
                        <!--ScreenVisibility ==Visible 控制添加  眼镜  删除 单点化按钮显示-->
                        <DataTrigger Binding="{Binding DataContext.ScreenVisibility,RelativeSource={RelativeSource AncestorLevel=1,AncestorType=UserControl}}" Value="Visible">
                            <Setter  Property="Visibility" TargetName="symbolic" Value="Collapsed"></Setter>
                            <Setter  Property="Visibility" TargetName="FirstEye" Value="Collapsed"></Setter>
                            <Setter  Property="Visibility" TargetName="add" Value="Collapsed"></Setter>
                            <Setter  Property="Visibility" TargetName="delete" Value="Collapsed"></Setter>

                        </DataTrigger>
                        <!--SplitScreenType ==0，1，2，3 代表是1到4个屏  控制添加  眼镜  删除 单点化按钮显示-->
                        <DataTrigger Binding="{Binding DataContext.SplitScreenType,RelativeSource={RelativeSource AncestorLevel=1,AncestorType=UserControl}}" Value="0">
                            <Setter  Property="Visibility" TargetName="FirstEye" Value="Visible"></Setter>
                            <Setter  Property="Rows" TargetName="_UniformGrid" Value="1"></Setter>
                            <Setter  Property="Columns" TargetName="_UniformGrid" Value="1"></Setter>
                            <Setter  Property="Content" TargetName="FirstEye" Value=""></Setter>
                            <Setter  Property="Content" TargetName="TwoEye" Value=""></Setter>
                            <Setter  Property="Content" TargetName="ThreeEye" Value=""></Setter>
                            <Setter  Property="Content" TargetName="FourEye" Value=""></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.SplitScreenType,RelativeSource={RelativeSource AncestorLevel=1,AncestorType=UserControl}}" Value="1">
                            <Setter  Property="Visibility" TargetName="FirstEye" Value="Visible"></Setter>
                            <Setter  Property="Visibility" TargetName="TwoEye" Value="Visible"></Setter>
                            <Setter  Property="Rows" TargetName="_UniformGrid" Value="1"></Setter>
                            <Setter  Property="Columns" TargetName="_UniformGrid" Value="2"></Setter>
                            <Setter  Property="Content" TargetName="FirstEye" Value="左"></Setter>
                            <Setter  Property="Content" TargetName="TwoEye" Value="右"></Setter>
                            <Setter  Property="Content" TargetName="ThreeEye" Value=""></Setter>
                            <Setter  Property="Content" TargetName="FourEye" Value=""></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.SplitScreenType,RelativeSource={RelativeSource AncestorLevel=1,AncestorType=UserControl}}" Value="2">
                            <Setter  Property="Visibility" TargetName="FirstEye" Value="Visible"></Setter>
                            <Setter  Property="Visibility" TargetName="TwoEye" Value="Visible"></Setter>
                            <Setter  Property="Visibility" TargetName="ThreeEye" Value="Visible"></Setter>
                            <Setter  Property="Rows" TargetName="_UniformGrid" Value="1"></Setter>
                            <Setter  Property="Columns" TargetName="_UniformGrid" Value="3"></Setter>
                            <Setter  Property="Content" TargetName="FirstEye" Value="左"></Setter>
                            <Setter  Property="Content" TargetName="TwoEye" Value="中"></Setter>
                            <Setter  Property="Content" TargetName="ThreeEye" Value="右"></Setter>
                            <Setter  Property="Content" TargetName="FourEye" Value=""></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.SplitScreenType,RelativeSource={RelativeSource AncestorLevel=1,AncestorType=UserControl}}" Value="3">
                            <Setter  Property="Visibility" TargetName="FirstEye" Value="Visible"></Setter>
                            <Setter  Property="Visibility" TargetName="TwoEye" Value="Visible"></Setter>
                            <Setter  Property="Visibility" TargetName="ThreeEye" Value="Visible"></Setter>
                            <Setter  Property="Visibility" TargetName="FourEye" Value="Visible"></Setter>
                            <Setter  Property="Rows" TargetName="_UniformGrid" Value="2"></Setter>
                            <Setter  Property="Columns" TargetName="_UniformGrid" Value="2"></Setter>
                            <Setter  Property="Content" TargetName="FirstEye" Value="左上"></Setter>
                            <Setter  Property="Content" TargetName="TwoEye" Value="右上"></Setter>
                            <Setter  Property="Content" TargetName="ThreeEye" Value="左下"></Setter>
                            <Setter  Property="Content" TargetName="FourEye" Value="右下"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="ListBoxItemNewStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <Setter Property="Background" Value="#1E2026"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#292B31"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="MainBorder" Width="{TemplateBinding Width}"  MaxWidth="{TemplateBinding Width}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="ChildBorder" Grid.ColumnSpan="3" Panel.ZIndex="0"  Width="{TemplateBinding Width}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MaxWidth="{TemplateBinding Width}" BorderThickness="0" Margin="0" Padding="0"/>
                            <controls:Buttons Grid.Column="1" x:Name="PART_EditButton" Visibility="Hidden" Command="{Binding Path=DataContext.EditCommand,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding }"   Style="{StaticResource tagButtonStyle}" 
                                       PathData="{StaticResource glyphicon-edit}" HasPathData="True" Margin="2,0,1,0"/>
                            <controls:Buttons Grid.Column="2" x:Name="PART_ClearButton" Visibility="Hidden" Command="{Binding Path=DataContext.DeleteCommand,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding }"   Style="{StaticResource tagButtonStyle}" 
                                       PathData="{StaticResource glyphicon-delete}" HasPathData="True" Margin="1,0,2,0"/>

                            <controls:Buttons Grid.Column="1" x:Name="PART_Save" Visibility="Hidden" Command="{Binding Path=DataContext.SaveCommand,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                      PathData="{StaticResource glyphicon-save}" HasPathData="True" Margin="2,0,1,0"/>
                            <controls:Buttons Grid.Column="2" x:Name="PART_Cancel" Visibility="Hidden" Command="{Binding Path=DataContext.CancelCommand,RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding }"   Style="{StaticResource Button_plusDefaultStyle}" 
                                       PathData="{StaticResource glyphicon-cancel}" HasPathData="True" Margin="1,0,2,0"/>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Panel.ZIndex="2" Margin="10,5,0,5">
                                <Border Height="6" Width="6" Margin="19,0,13,0" BorderBrush="#50ABFF" Background="#50ABFF" BorderThickness="1" CornerRadius="3"/>
                                <TextBlock x:Name="textmessage"  TextTrimming="CharacterEllipsis" Text="{Binding name}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding name}" ></ToolTip>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </StackPanel>

                            <TextBox x:Name="tbMessage" Grid.Column="0" Panel.ZIndex="2" MaxLength="30" Width="250"
                                     Visibility="{Binding IsEdit,Converter={StaticResource BoolToVisible}}"
                                     FontSize="{TemplateBinding FontSize}" Margin="0,5,0,5" Padding="0" helper:TextBoxHelper.TextBoxEdit="{Binding IsEdit}" Style="{DynamicResource TbxWaterStyle}"
                                     helper:TextBoxHelper.Watermark="请输入内容" helper:TextBoxHelper.IsNeedClearButton="False"
                                     Text="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                            </TextBox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_EditButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ChildBorder" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="ChildBorder" Value="#50ABFF"/>
                            <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsEdit}" Value="True">
                            <Setter TargetName="PART_EditButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_Save" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Cancel" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="PART_EditButton" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ChildBorder" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="ChildBorder" Value="#50ABFF"/>
                            <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="True"/>
                                <Condition Binding="{Binding IsEdit}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EditButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_Save" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Cancel" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderThickness" TargetName="ChildBorder" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" TargetName="tbMessage" Value="Right"/>
                            <Setter Property="HorizontalAlignment" TargetName="textmessage" Value="Right"/>
                            <Setter Property="BorderBrush" TargetName="ChildBorder" Value="#50ABFF"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="lbDefaultItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="143"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1.1" Duration="0:0:0.3"
                                                         Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)"/>
                                        <DoubleAnimation To="1.1" Duration="0:0:0.3"
                                                         Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleY)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0:0:0.3"
                                                         Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)"/>
                                        <DoubleAnimation To="1" Duration="0:0:0.3"
                                                         Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleY)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter Property="Background" TargetName="Bd" Value="Red"/>-->
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#336696"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Background" TargetName="Bd" Value="Red"/>-->
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#336696"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Background" TargetName="Bd" Value="Red"/>-->
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#336696"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style  x:Key="LabelListBoxStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"/>
        <!--<Setter Property="Background" Value="{DynamicResource LeftWindowBg}"/>-->
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#2A3243"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="MainBorder" Width="{TemplateBinding Width}" 
                            MaxWidth="{TemplateBinding Width}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="0" >
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background"  Value="Transparent"/>
                            <Setter TargetName="MainBorder" Property="BorderBrush"  Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>