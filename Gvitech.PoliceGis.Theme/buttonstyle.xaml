<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style
		TargetType="{x:Type ButtonBase}"
		x:Key="ButtonBaseStyle">
		<Setter
			Property="FrameworkElement.FocusVisualStyle"
			Value="{x:Null}" />
		<Setter
			Property="Background"
			Value="{DynamicResource ButtonBackBrush}" />
		<Setter
			Property="Foreground"
			Value="{DynamicResource NormalButtonForegroundBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="BorderBrush"
			Value="#00FFFFFF" />
		<Setter
			Property="MinHeight"
			Value="25" />
		<Setter
			Property="FontSize"
			Value="14" />
	</Style>
	<Style
		BasedOn="{StaticResource ButtonBaseStyle}"
		TargetType="{x:Type ToggleButton}"
		x:Key="ToggleButtonStyle">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ToggleButton}">
					<Border
						Width="{TemplateBinding Width}"
						Height="{TemplateBinding Height}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}"
						SnapsToDevicePixels="True">
						<ContentPresenter
							HorizontalAlignment="Center"
							VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="ToggleButton.IsChecked"
							Value="true">
							<Setter
								Value="{DynamicResource HighlightBackBrush}"
								Property="Background" />
							<Setter
								Value="{DynamicResource HighlightForeBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								Value="{DynamicResource HighlightBackBrush}"
								Property="Background" />
							<Setter
								Value="{DynamicResource HighlightForeBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								Value="{DynamicResource HoverHighlightBackBrush}"
								Property="Background" />
							<Setter
								Value="{DynamicResource HighlightForeBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							Property="UIElement.IsKeyboardFocused"
							Value="True">
							<Setter
								Value="{DynamicResource HighlightBackBrush}"
								Property="BorderBrush" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		BasedOn="{StaticResource ButtonBaseStyle}"
		TargetType="{x:Type Button}"
		x:Key="ButtonStyle">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Button}">
					<Border
						Width="{TemplateBinding Width}"
						Height="{TemplateBinding Height}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}"
						SnapsToDevicePixels="True">
						<ContentPresenter
							HorizontalAlignment="Center"
							VerticalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsPressed"
							Value="True">
							<Setter
								Value="{DynamicResource HighlightBackBrush}"
								Property="Background" />
							<Setter
								Value="{DynamicResource HighlightForeBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								Value="{DynamicResource HoverHighlightBackBrush}"
								Property="Background" />
							<Setter
								Value="{DynamicResource HighlightForeBrush}"
								Property="Foreground" />
						</Trigger>
						<Trigger
							Property="UIElement.IsKeyboardFocused"
							Value="True">
							<Setter
								Value="{DynamicResource HighlightBackBrush}"
								Property="BorderBrush" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		BasedOn="{StaticResource ButtonStyle}"
		TargetType="{x:Type Button}"
		x:Key="TransparentButtonStyle">
		<Setter
			Property="Background"
			Value="#00FFFFFF" />
	</Style>
	<Style
		BasedOn="{StaticResource TransparentButtonStyle}"
		TargetType="{x:Type Button}"
		x:Key="CloseWndButtonStyle">
		<Setter
			Property="MinWidth"
			Value="30" />
		<Setter
			Property="Height"
			Value="30" />
		<Setter
			Property="Content">
			<Setter.Value>
				<Image
					Source="pack://siteoforigin:,,,/Resources/winclose.png" />
			</Setter.Value>
		</Setter>
	</Style>

    <!--<Style
		BasedOn="{StaticResource TransparentButtonStyle}"
		TargetType="{x:Type Button}"
		x:Key="SimpleIconButtonStyle">
        --><!--<Setter
			Property="MinWidth"
			Value="30" />
        <Setter
			Property="Height"
			Value="30" />--><!--
        <Setter
			Property="Content">
            <Setter.Value>
                <Image  Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style
		TargetType="{x:Type ToggleButton}"
		x:Key="ExToggleButtonStyle">
		<Setter
			Property="Background"
			Value="#FFC0C0C0" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="BorderBrush"
			Value="#FF808080" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ToggleButton}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="UIElement.IsMouseOver"
							Value="True">
							<Setter
								Property="Background"
								Value="#FF808080" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
