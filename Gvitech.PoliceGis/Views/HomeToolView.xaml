<UserControl x:Class="MMC.MSpace.Views.HomeToolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dtselector="http://schemas.mmc.com/dtselector" 
    xmlns:gvi="http://schemas.mmc.com" 
    xmlns:gvifm="http://schemas.mmc.com/wpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	HorizontalAlignment="Center"
	VerticalAlignment="Bottom" xmlns:converter="clr-namespace:MMC.MSpace.Converter">
    <UserControl.Resources>
        <ResourceDictionary>
            <converter:ConverterKeyToContent x:Key="ConverterKeyToContent"/>
            <dtselector:ToolDataTemplateSelector x:Key="ToolDataTemplateSelector" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ItemsControl
		Name="tools"
		Margin="20,40" 
		HorizontalAlignment="Center"
		VerticalAlignment="Bottom"
		ItemTemplateSelector="{DynamicResource ToolDataTemplateSelector}"
		ItemsSource="{Binding ShellModel.ToolMenuItems}">
        <FrameworkElement.Resources>
            <ResourceDictionary>
                <Style TargetType="{x:Type ContentPresenter}"	x:Key="{x:Type ContentPresenter}">
                    <Setter Property="Width" Value="{gvifm:SetX {Binding Source={StaticResource IconWidth}}}" />
                    <Setter Property="Height" Value="{gvifm:SetY {Binding Source={StaticResource IconHeight}}}" />
                    <Setter Property="Visibility" Value="{Binding Visible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Setter Property="Margin" Value="{gvifm:SetMargin {Binding Source={StaticResource ToolIconMargin}}}" />
                </Style>
                <Style xmlns:controls="clr-namespace:Mmc.Wpf.Toolkit.Controls;assembly=Mmc.Wpf.Toolkit" TargetType="{x:Type controls:IconButton}" x:Key="{x:Type controls:IconButton}" BasedOn="{StaticResource TopMenuStyle}">
                    <Setter
						Property="Command"
						Value="{Binding Command}" />
                    <Setter
						Property="Content"
					Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}" />
                    <Setter
						Property="controls:IconButton.Icon"
						Value="{Binding Icon}" />
                    <Setter
						Property="controls:IconButton.MouseOverIcon"
						Value="{Binding MouseOverIcon}" />
                    <Setter
						Property="FrameworkElement.ToolTip"
					Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}"
                        />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type controls:IconButton}">
                                <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">

                                    <Image 
							Name="img"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"
							Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger
							Property="UIElement.IsMouseOver" Value="True">
                                        <Setter TargetName="img" Property="Source" Value="{Binding MouseOverIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style xmlns:controls="clr-namespace:Mmc.Wpf.Toolkit.Controls;assembly=Mmc.Wpf.Toolkit"
					TargetType="{x:Type controls:IconRadioButton}"
					x:Key="{x:Type controls:IconRadioButton}">
                    <Setter
						Property="controls:IconRadioButton.NCommand"
						Value="{Binding Command}" />
                    <Setter
						Property="Content"
						 Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}" />
                    <Setter
						Property="controls:IconRadioButton.Icon"
						Value="{Binding Icon}" />
                    <Setter
						Property="controls:IconRadioButton.MouseOverIcon"
						Value="{Binding MouseOverIcon}" />
                    <Setter
						Property="FrameworkElement.ToolTip"
					Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}" />
                    <Setter
						Property="RadioButton.GroupName"
						Value="{Binding GroupName}" />
                    <Setter
						Property="ToggleButton.IsChecked"
						Value="{Binding IsChecked}" />
                </Style>
                <Style xmlns:controls="clr-namespace:Mmc.Wpf.Toolkit.Controls;assembly=Mmc.Wpf.Toolkit" TargetType="{x:Type controls:IconPopupButton}" x:Key="{x:Type controls:IconPopupButton}">
                    <Setter
						Property="Content"
					Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}" />
                    <Setter
						Property="controls:IconToggleButton.Icon"
						Value="{Binding Icon}" />
                    <Setter
						Property="controls:IconToggleButton.MouseOverIcon"
						Value="{Binding MouseOverIcon}" />
                    <Setter
						Property="FrameworkElement.ToolTip"
					Value="{Binding Content,Converter={StaticResource ConverterKeyToContent}}" />
                </Style>
            </ResourceDictionary>
        </FrameworkElement.Resources>
    </ItemsControl>
</UserControl>

