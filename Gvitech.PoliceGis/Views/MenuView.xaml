<UserControl
	x:Class="MMC.MSpace.Views.MenuView" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:dtselector="http://schemas.mmc.com/dtselector"
    xmlns:gvi="http://schemas.mmc.com"
    xmlns:gvifm="http://schemas.mmc.com/wpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Background="#FF180053" xmlns:views="clr-namespace:MMC.MSpace.Views">
    <UserControl.Resources>
        <dtselector:BarDataTemplateSelector  x:Key="BarDataTemplateSelector" />
        <Style xmlns:controls="clr-namespace:Mmc.Wpf.Toolkit.Controls;assembly=Mmc.Wpf.Toolkit"
				TargetType="{x:Type controls:IconButton}"
				x:Key="{x:Type controls:IconButton}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="controls:IconButton.Icon" Value="{Binding Icon}" />
            <Setter Property="Background" Value="{Binding Background}" />
            <Setter Property="controls:IconButton.MouseOverIcon" Value="{Binding MouseOverIcon}" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="Command" Value="{Binding Command}" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type controls:IconButton}">
                        <Grid>
                            <Border
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="0.2*" />
                                    </Grid.RowDefinitions>
                                    <Border Name="bd1" Margin="0,50">
                                        <Image
												Name="img"
												Width="{Binding ActualWidth, ElementName=bd1}"
												Height="{Binding ActualHeight, ElementName=bd1}"
												Source="{Binding Icon}" />
                                    </Border>
                                    <Border Name="bd2" Grid.Row="1" Margin="0,0,0,10">
                                        <Image
												Stretch="Uniform"
												Width="{Binding ActualWidth, ElementName=bd2}"
												Height="{Binding ActualHeight, ElementName=bd2}"
												Source="{Binding IconText}" />
                                    </Border>
                                </Grid>
                            </Border>
                            <Border Name="bd" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="BorderThickness" Value="2" />
                                <Setter TargetName="bd" Property="BorderBrush" Value="#FFFF4500" />
                                <Setter TargetName="img" Property="Source" Value="{Binding MouseOverIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter TargetName="bd" Property="BorderThickness" Value="2" />
                                <Setter TargetName="bd" Property="BorderBrush" Value="#FFFF4500" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <DockPanel Margin="{gvifm:SetMargin {Binding Source={StaticResource MenuMargin}}}">
        <gvifm:UniformGridWithSpacing
			FrameworkElement.VerticalAlignment="Top"
			UniformGrid.Columns="1"
			DockPanel.Dock="Right"
			UniformGrid.Rows="3"
			gvifm:UniformGridWithSpacing.SpaceBetweenColumns="2" >
            <FrameworkElement.Resources>
                <ResourceDictionary>
                    <Style
						BasedOn="{StaticResource {x:Type gvifm:IconDataButton}}"
						TargetType="{x:Type gvifm:IconDataButton}"
						x:Key="{x:Type gvifm:IconDataButton}">
                        <Setter Property="gvifm:IconDataButton.IconDataButtonType" Value="Rect" />
                        <Setter Property="Width" Value="36" />
                        <Setter Property="Height" Value="36" />
                    </Style>
                </ResourceDictionary>
            </FrameworkElement.Resources>
            <gvifm:IconDataButton
				gvifm:IconDataButton.IconGeoData="{DynamicResource FullScreenGeoData}"
				ButtonBase.Command="{Binding ShellModel.FullScreenCmd}"  />
            <gvifm:IconDataButton
				gvifm:IconDataButton.IconGeoData="{DynamicResource MinGeoData}"
				ButtonBase.Command="{Binding ShellModel.MinimizedCmd}"  />
            <gvifm:IconDataButton
				gvifm:IconDataButton.IconGeoData="{DynamicResource CloseGeoData}"
				ButtonBase.Command="{Binding ShellModel.CloseCmd}"  />
        </gvifm:UniformGridWithSpacing>
        <ItemsControl ItemTemplateSelector="{DynamicResource BarDataTemplateSelector}" ItemsSource="{Binding ShellModel.BarMenuItems}">
            <ItemsControl.Resources>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Grid.Column" Value="{Binding ColumnIndex}" />
                    <Setter Property="Grid.Row" Value="{Binding RowIndex}" />
                    <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}" />
                    <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}" />
                </Style>
            </ItemsControl.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <gvifm:ExtendGrid ColumnCount="{Binding ShellModel.ColumnCount}" RowCount="{Binding ShellModel.RowCount}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

    </DockPanel>
</UserControl>
