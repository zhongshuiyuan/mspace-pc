<blankWindow:BlankWindow x:Class="Mmc.Mspace.PoiManagerModule.Views.LabelTypeAddOrEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mmc.Mspace.PoiManagerModule.Views"
             xmlns:blankWindow="http://GFramework.org"
             xmlns:helper="clr-namespace:Mmc.Mspace.Theme.Helper;assembly=Mmc.Mspace.Theme"
             mc:Ignorable="d" Width="290" Height="426" Background="Transparent"
             WindowStartupLocation="Manual" Style="{StaticResource AllowsTransparencyWindowStyle}">
    <blankWindow:BlankWindow.Resources>
        <Style x:Key="BtnStyle" TargetType="Button">
            <Setter Property="Background" Value="#50ABFF"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" 
                                CornerRadius="2" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="UIElement.IsMouseOver"
                                Value="True">
                                <Setter
                                    Value="{DynamicResource HighlightForeBrush}"
                                    Property="Foreground" />
                            </Trigger>
                            <Trigger
                                Property="UIElement.IsKeyboardFocused"
                                Value="True">
                                <Setter
                                    Value="{DynamicResource HighlightBackBrush}"
                                    Property="BorderBrush" />
                            </Trigger>
                            <Trigger
                                Property="IsPressed"
                                Value="True">
                                <Setter
                                    Value="{DynamicResource HighlightBackBrush}"
                                    Property="Background" />
                                <Setter
                                    Value="{DynamicResource HighlightForeBrush}"
                                    Property="Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="tagTemplate">
            <Border x:Name="TagBorder" BorderBrush="#71757E" Visibility="{Binding LabelIsSelected,Converter={StaticResource BooleanToVisibilityConverter}}" 
                    BorderThickness="1" ToolTip="{Binding LabelName}" CornerRadius="2"  Margin="4,2" MinWidth="42" Height="20">
                <TextBlock x:Name="TagText" MinWidth="70" TextTrimming="CharacterEllipsis" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#91959C" FontSize="10" 
                           TextAlignment="Justify" Text="{Binding LabelName}"/>
            </Border>
            <DataTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#50ABFF" TargetName="TagBorder"/>
                    <Setter Property="Background" Value="#50ABFF" TargetName="TagBorder"/>
                    <Setter Property="Foreground" Value="White" TargetName="TagText"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </blankWindow:BlankWindow.Resources>
    <Border Background="#1E2026" Opacity="0.9" CornerRadius="5" blankWindow:BlankWindow.Draggable="True">
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition/>
                <RowDefinition Height="64"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Background="#292C35" CornerRadius="5" blankWindow:BlankWindow.Draggable="True" />
            <TextBlock x:Name="TitleName" blankWindow:BlankWindow.Draggable="True"  Grid.Row="0" Text="{Binding TitleName}" Margin="10,0,0,0" Foreground="White"  FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Button Grid.Row="0" x:Name="CloseButton" Command="{Binding CloseCommand}"  Style="{DynamicResource ButtonCloseStyle}" Height="36" Width="36" HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="2"/>
            <Border Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,0,1" />

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition MaxHeight="50"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center" Margin="8,2">
                    <Label Content="输入名称:" Foreground="#B3BBC5" VerticalAlignment="Center" FontSize="14"/>
                    <TextBox Height="32" HorizontalAlignment="Stretch" Style="{StaticResource TbxWaterStyle}" helper:TextBoxHelper.IsNeedClearButton="False" FontSize="14"
                             helper:TextBoxHelper.Watermark="标签类型名称" Text="{Binding TagTypeName,Mode=TwoWay}"/>
                </StackPanel>

                <ScrollViewer Grid.Row="1" Margin="8,0">
                    <ItemsControl ItemTemplate="{StaticResource tagTemplate}" ItemsSource="{Binding Tags}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Stretch"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>

                <Border Grid.Row="2" BorderBrush="Black" BorderThickness="1" Margin="8,2" Background="Black">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="#FF1E2026" Height="32" HorizontalAlignment="Stretch" Opacity="1"/>

                        <CheckBox Grid.Row="1" Foreground="#B3BBC5" Content="{DynamicResource PoiFilter_All}" Margin="13,8,13,4" Style="{StaticResource FilterLabelCheckBoxStyle}"
                                  IsChecked="{Binding IsCheckedAll}"
                                  Command="{Binding IsCheckedAllCommand}"
                                  CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}"/>

                        <ListBox Grid.Row="2" ItemsSource="{Binding Tags}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                                                    <CheckBox Margin="10,4" Style="{StaticResource FilterLabelCheckBoxStyle}"
                                                              Foreground="#B3BBC5" x:Name="ckb"
                                                              Content="{Binding LabelName}"
                                                              IsChecked="{Binding LabelIsSelected}"
                                                              Command="{Binding DataContext.TagItemCheckedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                              CommandParameter="{Binding DataContext,RelativeSource={RelativeSource Self}}"/>
                                                </StackPanel>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="ckb" Property="Foreground" Value="White"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Grid>
                </Border>
            </Grid>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2">
                <Button Height="32" Width="80" Content="确定" Style="{StaticResource BtnStyle}" Margin="16,5" Command="{Binding SaveCommand}"/>
                <Button Height="32" Width="80" Content="取消" Style="{StaticResource BtnStyle}" Margin="16,5" Command="{Binding CloseCommand}"/>
            </StackPanel>
        </Grid>
    </Border>
</blankWindow:BlankWindow>
