<blankWindow:BlankWindow x:Class="Mmc.Mspace.PoiManagerModule.Views.MarkerView"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:blankWindow="http://GFramework.org"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                         xmlns:local="clr-namespace:Mmc.Mspace.PoiManagerModule"
                         xmlns:conrols="clr-namespace:Mmc.Mspace.Theme.Controls;assembly=Mmc.Mspace.Theme"
                         xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                         xmlns:viewModels="clr-namespace:Mmc.Mspace.PoiManagerModule.ViewModels"
                         xmlns:helper="clr-namespace:Mmc.Mspace.Theme.Helper;assembly=Mmc.Mspace.Theme"
                         xmlns:views="clr-namespace:Mmc.Mspace.PoiManagerModule.Views"
                         mc:Ignorable="d"
        Title="MarkerView" Height="650" Width="280" AllowsTransparency="True">
    <blankWindow:BlankWindow.Resources>

        <Style x:Key ="ButtonDeleteStyle" BasedOn="{x:Null}" TargetType ="{x:Type Button }">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property ="Template">
                <Setter.Value >
                    <ControlTemplate TargetType ="{ x:Type Button }">
                        <Grid x:Name ="buttonClose">
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="1" x:Name="PART_Background" Background="{TemplateBinding Background}"/>
                            <Path x:Name ="iconX" Width="12" Height="12" Stretch ="Fill" Fill ="{Binding RelativeSource={RelativeSource AncestorType=Button,Mode=FindAncestor},Path=Foreground}" Data ="M48.7337884,3.27531286 C48.3788396,2.92036405 47.8054608,2.92036405 47.4505119,3.27531286 L43,7.71672355 L38.5494881,3.2662116 C38.1945392,2.9112628 37.6211604,2.9112628 37.2662116,3.2662116 C36.9112628,3.62116041 36.9112628,4.19453925 37.2662116,4.54948805 L41.7167235,9 L37.2662116,13.4505119 C36.9112628,13.8054608 36.9112628,14.3788396 37.2662116,14.7337884 C37.6211604,15.0887372 38.1945392,15.0887372 38.5494881,14.7337884 L43,10.2832765 L47.4505119,14.7337884 C47.8054608,15.0887372 48.3788396,15.0887372 48.7337884,14.7337884 C49.0887372,14.3788396 49.0887372,13.8054608 48.7337884,13.4505119 L44.2832765,9 L48.7337884,4.54948805 C49.0796359,4.2036405 49.0796359,3.62116041 48.7337884,3.27531286 Z"/>
                            <ContentPresenter SnapsToDevicePixels ="{ TemplateBinding SnapsToDevicePixels }" HorizontalAlignment ="{ TemplateBinding HorizontalContentAlignment }" VerticalAlignment ="{ TemplateBinding VerticalContentAlignment }" RecognizesAccessKey ="True"/>
                        </Grid>
                        <ControlTemplate.Triggers >
                            <Trigger Property="IsMouseOver" Value="true" SourceName="buttonClose">
                                <Setter Property="Opacity" Value="1" TargetName="PART_Background"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Fill" Value="White" TargetName="iconX"/>
                                <Setter Property="BorderThickness" TargetName="PART_Background" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key ="ButtonAddStyle" BasedOn="{x:Null}" TargetType ="{x:Type Button }">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Width" Value="12"/>
            <Setter Property ="Template">
                <Setter.Value >
                    <ControlTemplate TargetType ="{ x:Type Button }">
                        <Grid x:Name ="buttonClose">
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" CornerRadius="1" x:Name="PART_Background" Background="{TemplateBinding Background}"/>
                            <Path x:Name ="iconX" Width="12" Height="12" Stretch ="Fill" Fill ="#B1B9C2" Data ="M17.1698277,9.50470453 C17.1698277,9.13775087 16.873442,8.84136523 16.5064884,8.84136523 L13.1633393,8.83666069 L13.1633393,5.48880708 C13.1633393,5.12185342 12.8669537,4.82546778 12.5,4.82546778 C12.1330463,4.82546778 11.8366607,5.12185342 11.8366607,5.48880708 L11.8366607,8.83666069 L8.48880708,8.83666069 C8.12185342,8.83666069 7.82546778,9.13304634 7.82546778,9.5 C7.82546778,9.86695366 8.12185342,10.1633393 8.48880708,10.1633393 L11.8366607,10.1633393 L11.8366607,13.5111929 C11.8366607,13.8781466 12.1330463,14.1745322 12.5,14.1745322 C12.8669537,14.1745322 13.1633393,13.8781466 13.1633393,13.5111929 L13.1633393,10.1633393 L16.5111929,10.1633393 C16.8687375,10.1633393 17.1698277,9.86224913 17.1698277,9.50470453 Z"/>
                            <ContentPresenter SnapsToDevicePixels ="{ TemplateBinding SnapsToDevicePixels }" HorizontalAlignment ="{ TemplateBinding HorizontalContentAlignment }" VerticalAlignment ="{ TemplateBinding VerticalContentAlignment }" RecognizesAccessKey ="True"/>
                        </Grid>
                        <ControlTemplate.Triggers >
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="1" TargetName="PART_Background"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Fill" Value="White" TargetName="iconX"/>
                                <Setter Property="BorderThickness" TargetName="PART_Background" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="TagTemplate" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border"  BorderThickness="1" BorderBrush="#71757E" CornerRadius="2" Margin="4,0">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock x:Name="tagName" HorizontalAlignment="Center" Text="{Binding TagName}" VerticalAlignment="Center" Margin="2" ToolTip="{Binding TagName}"/>
                                <Button x:Name="tagButton" Visibility="Collapsed" Command="{Binding DataContext.TagCommand,RelativeSource={RelativeSource AncestorType=blankWindow:BlankWindow,Mode=FindAncestor}}" 
                                        CommandParameter="{Binding DataContext,RelativeSource={RelativeSource Self}}"
                                        Style="{StaticResource ButtonCloseStyle}" HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="4"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="Tag" SourceName="Border" Value="Delete">
                                <Setter Property="Style" TargetName="tagButton" Value="{StaticResource ButtonDeleteStyle}"/>
                            </Trigger>
                            <Trigger Property="Tag" SourceName="Border" Value="Add">
                                <Setter Property="Style" TargetName="tagButton" Value="{StaticResource ButtonAddStyle}"/>
                                <Setter TargetName="tagButton" Property="Visibility" Value="Visible"/>
                            </Trigger>-->

                            <DataTrigger Binding="{Binding ItemTag}" Value="Delete">
                                <Setter TargetName="tagButton" Property="Style" Value="{StaticResource ButtonDeleteStyle}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ItemTag}" Value="Add">
                                <Setter TargetName="tagButton" Property="Style" Value="{StaticResource ButtonAddStyle}"/>
                                <Setter TargetName="tagButton" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="tagButton" Property="HorizontalAlignment" Value="Center"/>
                                <Setter TargetName="tagName" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="White"/>
                                <Setter TargetName="tagName" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="tagButton" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Border" Property="Background" Value="#1890FF"/>
                                <Setter TargetName="tagName" Property="Foreground" Value="White"/>
                                <Setter TargetName="tagButton" Property="Foreground" Value="#EBF5FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#50ABFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border x:Name="Border" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="100" Background="Transparent">
                            <TextBlock x:Name="Label" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" TextTrimming="CharacterEllipsis" 
                                       FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{TemplateBinding Content}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="Label" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="#50ABFF"/>
                                <Setter Property="Foreground" TargetName="Label" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BtnStyle" TargetType="Button">
            <Setter Property="Background" Value="#50ABFF"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" 
                                CornerRadius="2" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="UIElement.IsMouseOver"
                                Value="True">
                                <Setter
                                    Value="{DynamicResource HighlightForeBrush}"
                                    Property="Foreground" />
                            </Trigger>
                            <Trigger
                                Property="UIElement.IsKeyboardFocused"
                                Value="True">
                                <Setter
                                    Value="{DynamicResource HighlightBackBrush}"
                                    Property="BorderBrush" />
                            </Trigger>
                            <Trigger
                                Property="IsPressed"
                                Value="True">
                                <Setter
                                    Value="{DynamicResource HighlightBackBrush}"
                                    Property="Background" />
                                <Setter
                                    Value="{DynamicResource HighlightForeBrush}"
                                    Property="Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </blankWindow:BlankWindow.Resources>

    <Border Background="{StaticResource LeftWindowBg}" CornerRadius="5,5,5,5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Background="#292C35" Grid.Column="0" Grid.ColumnSpan="2" CornerRadius="5,5,0,0" blankWindow:BlankWindow.Draggable="True" />
            <TextBlock x:Name="TitleName" blankWindow:BlankWindow.Draggable="True"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding ViewTitle}" Margin="18,0,0,0" Foreground="White"  FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Button Grid.Row="0" x:Name="CloseButton" Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding CancelCommand}"  Style="{DynamicResource ButtonCloseStyle}" Height="24" Width="24" HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="0,2,8,0" />

            <StackPanel Grid.Row="1" Orientation="Horizontal" Width="266" Height="132" Margin="2">
                <Image Source="{Binding MarkerModel.ImgPath}" Width="226" Height="128" Stretch="Fill" MouseDown="Image_MouseDown" >
                </Image>
                <StackPanel Orientation="Vertical"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="40">
                    <conrols:Buttons    HasPathData="True" Height="24" Width="24" Margin="8,16,8,8"
                                        RIcon="{DynamicResource Update_N}" 
                                        MouseOverRIcon="{DynamicResource Update_H}" ToolTip="{DynamicResource Updatelocation}"
                                        PressedRIcon="{DynamicResource Update_H}" Command="{Binding GetLocalCommand}"  Style="{StaticResource HomeLeftButtonStyle}"></conrols:Buttons>
                    <conrols:Buttons    HasPathData="True" Height="24" Width="24" Margin="8,8,8,8"
                                        RIcon="{DynamicResource Screenshots_N}" 
                                        MouseOverRIcon="{DynamicResource Screenshots_H}" ToolTip="{DynamicResource Screenshots}"
                                        PressedRIcon="{DynamicResource Screenshots_H}" Command="{Binding GetPictureCommand}"  Style="{StaticResource HomeLeftButtonStyle}"></conrols:Buttons>

                    <conrols:Buttons    HasPathData="True" Height="24" Width="24" Margin="8,8,8,16"
                                        RIcon="{DynamicResource Flyinto_N}"  
                                        MouseOverRIcon="{DynamicResource Flyinto_H}" ToolTip="{DynamicResource Flyinto}"
                                        PressedRIcon="{DynamicResource Flyinto_H}" Command="{Binding FlytoCommand}"  Style="{StaticResource HomeLeftButtonStyle}"></conrols:Buttons>
                </StackPanel>
            </StackPanel>
            <TabControl Grid.Row="2" Margin="2" Background="{StaticResource LeftWindowBg}">
                <TabItem Header="{DynamicResource Information}"  Width="76" Height="24" Background="{StaticResource LeftWindowBg}" Style="{DynamicResource ResourceKey=CenterTabItemStyle}">
                    <StackPanel>
                        <!--<Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        
                        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize14}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultButtonForeground}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
                        </Grid.RowDefinitions>-->

                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,4,12,4" Height ="24" >
                            <TextBlock Width="54"  Text="编号：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBox  Width="172" Height ="24" IsReadOnly="True" Style="{StaticResource EditableTextBoxStyle}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" VerticalAlignment="Center"  Text="{Binding MarkerModel.Code}"  />
                        </StackPanel>

                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="12,4,12,4"  >
                            <TextBlock Width="54"  Text="{DynamicResource Name}" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBox x:Name="TitleTextBox" Width="174" Height ="24"  VerticalContentAlignment="Center" Style="{StaticResource EditableTextBoxStyle}" Text="{Binding MarkerModel.Title}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:InvokeCommandAction Command="{Binding TitleTextChangedCmd}" CommandParameter="{Binding Path=Text,ElementName=TitleTextBox}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="12,4,12,4" >
                            <TextBlock Width="54"  Text="等级：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <!--<TextBox  Width="186"   Style="{StaticResource EditableTextBoxStyle}" Text="{Binding MarkerModel.Level}" />-->

                            <ComboBox Width="174" Height="24" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding MarkRankTypes}" SelectedItem="{Binding SelectedRank}" Style="{DynamicResource DefaultComboBoxStyle}"/>
                        </StackPanel>

                        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="12,4,12,4" Height ="24" >
                            <!--<TextBlock Width="56"  Text="坐标：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBox  Width="186"   Style="{StaticResource EditableTextBoxStyle}" Text="{Binding Coor}" />-->
                            <TextBlock Width="44"  Text="经度：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBlock  Width="80"   Style="{StaticResource DefaultTextBlockStyle}" Text="{Binding Longitude, StringFormat={}{0:N5}°}" IsEnabled="False"/>

                            <TextBlock Width="42"  Text="纬度：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBlock  Width="80"   Style="{StaticResource DefaultTextBlockStyle}" Text="{Binding Latitude, StringFormat={}{0:N5}°}" IsEnabled="False"/>
                        </StackPanel>

                        <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="12,4,8,4"  >
                            <TextBlock Width="54"  Text="地址：" Style="{StaticResource DefaultTextBlockStyle}" VerticalAlignment="Top"/>
                            <TextBox  Width="151"  Height="70"  Style="{StaticResource EditableTextBoxStyle}" Text="{Binding MarkerModel.Address}" TextWrapping="Wrap"/>
                            <conrols:Buttons    HasPathData="True" Height="24" Width="24" VerticalAlignment="Top"
                                                RIcon="{DynamicResource updateAddress}"  
                                                MouseOverRIcon="{DynamicResource updateAddress_H}" ToolTip="更新"
                                                PressedRIcon="{DynamicResource updateAddress_C}" Command="{Binding GetAddressCommand}"  Style="{StaticResource HomeLeftButtonStyle}"/>
                        </StackPanel>

                        <StackPanel Grid.Row="5" Visibility="{Binding IsSizeCtrVisibility}" Orientation="Horizontal" Margin="12,4,12,4" Height ="24" >
                            <TextBlock Width="54"  Text ="{Binding SizeName}" TextAlignment ="Left"   FontSize="14" Foreground="#EBF5FF"/>
                            <TextBlock Height="24" TextAlignment="Center"  FontSize="14" Foreground="#EBF5FF" Text="{Binding MarkerModel.Size, StringFormat={}{0:N2}}" />
                            <TextBlock Margin="5,0,0,0" TextAlignment="Center" FontSize="14" Foreground="#EBF5FF" Text="{Binding MarkerModel.Poitype}" />
                        </StackPanel>
                        <!--Style="{StaticResource DefaultTextBlockStyle}"-->
                        <StackPanel Grid.Row="6" Orientation="Horizontal" Margin="12,4,12,4" Height ="Auto" MaxHeight="50">
                            <TextBlock Width="54"  Text="标签：" Style="{StaticResource DefaultTextBlockStyle}" VerticalAlignment="Top"/>
                            <!--<local:MultiSelectComboBox Width="174" Height="24"  ItemsSource="{Binding TagItems}" SelectedItems="{Binding SelectdTagItems}" x:Name="MC" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>-->

                            <ListBox x:Name="TagListBox" ItemsSource="{Binding TagItems}" ItemContainerStyle="{StaticResource TagTemplate}" Padding="0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Width="175"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ListBox>
                        </StackPanel>

                        <helper:PopupEx IsOpen="{Binding PopupIsOpen}" 
                                        HorizontalOffset="30" MaxWidth="374"
                                        Height="328" Panel.ZIndex="10"
                                        AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=TagListBox}"
                                        PopupAnimation="Fade" StaysOpen="True"
                                        VerticalOffset="0"
                                        x:Name="labelFilterPop">
                            <Border>
                                <Grid Background="#2A3243">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="56"/>
                                    </Grid.RowDefinitions>

                                    <Border Grid.Row="0" Margin="8,16,8,0" BorderThickness="1" BorderBrush="Black">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="124"/>
                                            </Grid.ColumnDefinitions>

                                            <ListBox ItemsSource="{Binding TagTypes}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem">
                                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <StackPanel Margin="4,2" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                                                        <CheckBox Style="{StaticResource CheckBoxStyle}" Content="{Binding name}"
                                                                                  IsChecked="{Binding IsChecked}"
                                                                                  Command="{Binding DataContext.TagTypeCheckedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                                                  CommandParameter="{Binding DataContext,RelativeSource={RelativeSource Self}}"/>
                                                                    </StackPanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                            </ListBox>

                                            <DockPanel HorizontalAlignment="Stretch" Grid.Column="1" Background="#14151A">
                                                <CheckBox Foreground="#B3BBC5" Content="{DynamicResource PoiFilter_All}" Margin="13,8,13,4" Style="{StaticResource FilterLabelCheckBoxStyle}"
                                                          IsChecked="{Binding TagsIsCheckedAll}"
                                                          Command="{Binding TagsIsCheckedAllCommand}"
                                                          CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}" DockPanel.Dock="Top"/>

                                                <ListBox ItemsSource="{Binding LabelCollection}">
                                                    <ItemsControl.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <StackPanel x:Name="sp" VerticalAlignment="Center" Orientation="Vertical">
                                                                            <CheckBox x:Name="ckb" Margin="10,4" Style="{StaticResource FilterLabelCheckBoxStyle}"
                                                                                      Foreground="#B3BBC5" ToolTip="{Binding LabelName}"
                                                                                      Content="{Binding LabelName}"
                                                                                      IsChecked="{Binding LabelIsSelected}"
                                                                                      Command="{Binding DataContext.TagItemCheckedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                                                      CommandParameter="{Binding DataContext,RelativeSource={RelativeSource Self}}"/>
                                                                        </StackPanel>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                                <Setter Property="Foreground" Value="White" TargetName="ckb"/>
                                                                                <Setter Property="Background" Value="Transparent" TargetName="sp"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ItemsControl.ItemContainerStyle>
                                                </ListBox>
                                            </DockPanel>
                                        </Grid>
                                    </Border>

                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Margin="8,8,8,16">
                                        <Button Height="32" Width="80" Content="确定" Style="{StaticResource BtnStyle}" Margin="16,0" Command="{Binding ConfirmLabelFilterCmd}"/>
                                        <Button Height="32" Width="80" Content="取消" Style="{StaticResource BtnStyle}" Margin="16,0" Command="{Binding CancelLabelFilterCmd}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </helper:PopupEx>

                        <StackPanel Grid.Row="7" Orientation="Horizontal" Margin="12,4,12,4" Height ="24" >
                            <TextBlock Width="54"  Text="处理者：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBox  Width="174" Height ="24"  VerticalContentAlignment="Center" Background="#16181B" Style="{StaticResource EditableTextBoxStyle}" Text="{Binding MarkerModel.Operator}" />
                        </StackPanel>

                        <StackPanel Grid.Row="8" Orientation="Horizontal" Margin="12,4,12,4" Height ="24" >
                            <TextBlock Width="54"  Text="电话：" Style="{StaticResource DefaultTextBlockStyle}"/>
                            <TextBox  Width="174"  Height ="24"  VerticalContentAlignment="Center" Style="{StaticResource EditableTextBoxStyle}" Text="{Binding MarkerModel.Phone}" />
                        </StackPanel>

                        <StackPanel Grid.Row="9" Orientation="Horizontal" Margin="12,4,12,4"  >
                            <TextBlock Width="54"  Text="状态："  Style="{StaticResource DefaultTextBlockStyle}"/>
                            <ComboBox Width="174" Height ="24" Background="#16181B" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding MarkHandleStatus}" SelectedItem="{Binding SelectedMarkStatu}" Style="{DynamicResource DefaultComboBoxStyle}"/>

                        </StackPanel>


                    </StackPanel>
                </TabItem>

                <TabItem Header="{DynamicResource StyleSet}"   Width="76" Height="24" Style="{DynamicResource ResourceKey=CenterTabItemStyle}">
                    <!--<StackPanel Orientation="Vertical" >-->

                    <StackPanel >
                        <!--<Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            -->
                        <!--<RowDefinition Height="Auto"/>-->
                        <!--
                        </Grid.RowDefinitions>-->


                        <StackPanel Grid.Row="0" Visibility="{Binding IsPoiCtrVisible}"  Orientation="Horizontal" Margin="12,4,5,4" >
                            <TextBlock Width="61"  Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource Icon}"></TextBlock>
                            <ComboBox Width="174" Height="24" Name="poitypesBox" DisplayMemberPath="cat_name" ItemsSource="{Binding PoiTypes}" SelectedItem="{Binding SelectedPoiType}" Style="{DynamicResource DefaultComboBoxStyle}"/>
                        </StackPanel>

                        <StackPanel Grid.Row="0" Visibility="{Binding IsSizeCtrVisibility}" Orientation="Horizontal" Margin="12,4,5,4" >
                            <TextBlock Width="61" Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource Elevation}"></TextBlock>
                            <ComboBox Width="174" Height="24" Name="HeightTypesBox" DisplayMemberPath="HeighName" ItemsSource="{Binding HeightTypes}" SelectedItem="{Binding SelectedHeightType}" Style="{DynamicResource  DefaultComboBoxStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding HeightTypeSelChangedCommand}" CommandParameter="{Binding ElementName=HeightTypesBox,Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Grid.Row="2" Visibility="{Binding IsLineCtrVisibility}" Orientation="Horizontal" Margin="12,4,5,4" >
                            <TextBlock Width="61" Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource Linewidth}"></TextBlock>
                            <TextBox  Style="{DynamicResource TbxWaterStyle}" Width="174" Height="24" HorizontalAlignment="Stretch" Margin="0"
                                      Text="{Binding LineWidth,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  />
                        </StackPanel>

                        <StackPanel Grid.Row="1" Visibility="{Binding IsSizeCtrVisibility}"  Orientation="Horizontal" Margin="12,4,5,4" >
                            <TextBlock Width="61" Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource Colors}"></TextBlock>
                            <xctk:ColorPicker Width="174" Height="24" x:Name="ColorPicker" Grid.Row="1" Grid.Column="1" Background="{StaticResource P60BlackBrush}" SelectedColorChanged="ColorPicker_SelectedColorChanged" ></xctk:ColorPicker>

                        </StackPanel>

                        <StackPanel Grid.Row="2"  Visibility="{Binding IsFaceCtrVisibility}" Orientation="Horizontal" Margin="12,4,5,4" >
                            <TextBlock Width="61" Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource SLLinewidth}"></TextBlock>
                            <TextBox    Style="{DynamicResource TbxWaterStyle}" Width="174" Height="24" HorizontalAlignment="Stretch" Margin="0"
                      Text="{Binding OutlineWidth,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  />

                        </StackPanel>


                        <StackPanel Grid.Row="3" Visibility="{Binding IsFaceCtrVisibility}" Orientation="Horizontal" Margin="12,4,5,4" >
                            <TextBlock Width="61" Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource SLColors}"></TextBlock>
                            <xctk:ColorPicker Width="174" Height="24" x:Name="OutlineColorPicker" Background="{StaticResource P60BlackBrush}" SelectedColorChanged="OutlineColorPicker_SelectedColorChanged" ></xctk:ColorPicker>

                        </StackPanel>

                        <!--</StackPanel>-->
                    </StackPanel>
                </TabItem>

                <TabItem Header="{DynamicResource Descr}"   Width="76" Height="24" Style="{DynamicResource ResourceKey=CenterTabItemStyle}">
                    <StackPanel Margin="12,4,12,4" >
                        <!--<Grid.RowDefinitions>
                            <RowDefinition  />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" ></ColumnDefinition>
                            <ColumnDefinition Width="140*" ></ColumnDefinition>
                            <ColumnDefinition Width="61*"/>
                        </Grid.ColumnDefinitions>-->
                        <TextBlock Margin="0,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" Style="{StaticResource DefaultTextBlockStyle}"  Text="{DynamicResource Notes}" Grid.ColumnSpan="2"/>
                        <TextBox Margin="10,5,10,0" Grid.Row="0" Grid.Column="1" MinHeight="100" TextWrapping="Wrap" AcceptsReturn="True" 
                         Text="{Binding MarkerModel.Detail}" VerticalAlignment="Top" Style="{DynamicResource TbxWaterMaxStyle}" Grid.ColumnSpan="2"/>
                    </StackPanel>
                </TabItem>
            </TabControl>

            <StackPanel Grid.Row="3" Margin="10,10" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button x:Name="okBtn"  Content="{DynamicResource OK}" HorizontalAlignment="Right" Height="24" Margin="20,0"   VerticalAlignment="Bottom" Width="60" FontSize="10"  Style="{DynamicResource DefaultButtonStyle}" Command="{Binding SaveCommand}"  IsEnabled="{Binding IsOkBtnEnable}"/>
                <!--<Button x:Name="cancelBtn"  Content="{DynamicResource Cancel}" HorizontalAlignment="Right" Height="24" FontSize="10" Margin="20,0"  VerticalAlignment="Bottom" Width="46"  Style="{DynamicResource DefaultButtonStyle}" Command="{Binding CancelCommand}" />-->
            </StackPanel>
        </Grid>
    </Border>
</blankWindow:BlankWindow>
